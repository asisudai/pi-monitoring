version: "3.1"

volumes:
    prometheus_data: {}
    grafana_data: {}
    pihole_pihole: {}
    pihole_dnsmasq: {}

networks:
  front-tier:
  back-tier:

services:

  pihole:
    container_name: pihole
    hostname: pihole
    image: pihole/pihole:latest
    network_mode: "host"
    # ports:
    #   - "53:53/tcp"
    #   - "53:53/udp"
    #   - "67:67/udp"
    #   - "80:80/tcp"
    environment:
      TZ: "America/Vancouver"
      WEBPASSWORD: admin
      ServerIP: 192.168.1.2
      DHCP_ACTIVE: "true"
      DHCP_START: 192.168.1.20
      DHCP_END: 192.168.1.80
      DHCP_ROUTER: 192.168.1.1
      DHCP_LEASETIME: 78
      VIRTUAL_HOST: pi
      PIHOLE_DOMAIN: "nelson"
      TEMPERATUREUNIT: c
      WEBUIBOXEDLAYOUT: traditional
      QUERY_LOGGING: "true"
      WEBTHEME: "dark"
      PIHOLE_DNS_: 9.9.9.9;149.112.112.112
    # Volumes store your data between container upgrades
    volumes:
      # - './etc/pihole/:/etc/pihole/'
      # - './etc/dnsmasq.d/:/etc/dnsmasq.d/'
      - pihole_pihole:/etc/pihole/
      - pihole_dnsmasq:/etc/dnsmasq.d/

    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    # hostname: prometheus
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - blackbox:blackbox
      - speedtest:speedtest
    networks:
      - back-tier

  grafana:
    container_name: grafana
    # hostname: grafana
    image: grafana/grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier

  blackbox:
    container_name: blackbox
    image: prom/blackbox-exporter
    tty: true
    stdin_open: true
    expose:
      - 9115
    ports:
      - 9115:9115
    restart: unless-stopped
    volumes:
      - ./blackbox/config:/config
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - back-tier

  speedtest:
    container_name: speedtest
    image: miguelndecarvalho/speedtest-exporter
    tty: true
    stdin_open: true
    expose:
      - 9798
    ports:
      - 9798:9798
    restart: unless-stopped
    networks:
      - back-tier

  nodeexporter:
    container_name: nodeexporter
    image: prom/node-exporter
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 9100:9100
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - back-tier
